name: Release & Publish

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout del c√≥digo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: ‚öôÔ∏è Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      - name: üì• Instalar dependencias del proyecto
        run: npm install

      - name: üî¢ Leer versi√≥n desde el tag
        id: version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: üìù Actualizar package.json con nueva versi√≥n
        run: |
          node -e "let pkg = require('./package.json'); pkg.version = process.env.RELEASE_VERSION; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');"

      - name: üß™ Instalar conventional-changelog-cli
        run: npm install -g conventional-changelog-cli

      - name: üßæ Generar o actualizar CHANGELOG.md
        run: |
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0

      - name: ‚úÖ Commit y push de versi√≥n y changelog
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull --rebase origin ${{ github.event.release.target_commitish }}
          git add package.json CHANGELOG.md
          git commit -m "chore: release v${RELEASE_VERSION}" || echo "No hay cambios que commitear"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} HEAD:${{ github.event.release.target_commitish }}

      - name: üöÄ Publicar en NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
